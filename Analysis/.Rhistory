computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(fscore1-fscore2)}
rm()
rm(list = ls())
library(boot)
library(simpleboot)
library(ggplot2)
pval<-numeric()
cil<-numeric()
ciu<-numeric()
x<-factor()
y<-factor()
obs<-722
trp1<-596
fap1<-26
fan1<-100
trp2<-596
fap2<-0
fan2<-126
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(fscore1-fscore2)}
b<-boot(data,computeFscorediff,10000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
obs<-722
trp1<-596
fap1<-26
fan1<-100
trp2<-496
fap2<-100
fan2<-126
b<-boot(data,computeFscorediff,10000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
obs<-722
trp1<-596
fap1<-26
fan1<-100
trp2<-596
fap2<-0
fan2<-126
View(data)
View(data)
p1<-(sum(sample$tp1)/sum(sample$fp1))
p1<-(sum(data$tp1)/sum(data$fp1))
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
r1<-(sum(data$tp1)/sum(data$fn1))
r2<-(sum(data$tp2)/sum(data$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
print(p1)
print(r1)
obs<-722
trp1<-586
fap1<-26
fan1<-110
trp2<-596
fap2<-0
fan2<-126
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
b<-boot(data,computeFscorediff,10000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
r1<-(sum(data$tp1)/sum(data$fn1))
r2<-(sum(data$tp2)/sum(data$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
obs<-722
trp1<-596
fap1<-26
fan1<-100
trp2<-596
fap2<-0
fan2<-126
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
r1<-(sum(data$tp1)/sum(data$fn1))
r2<-(sum(data$tp2)/sum(data$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2)
obs<-727
trp1<-596
fap1<-31
fan1<-100
trp2<-596
fap2<-0
fan2<-131
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
r1<-(sum(data$tp1)/sum(data$fn1))
r2<-(sum(data$tp2)/sum(data$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
obs<-87
trp1<-84
fap1<-2
fan1<-1
trp2<-84
fap2<-0
fan2<-3
obs<-87
trp1<-84
fap1<-2
fan1<-1
trp2<-84
fap2<-0
fan2<-3
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(fscore1-fscore2)}
b<-boot(data,computeFscorediff,10000)
print(b)
# Scores
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
r1<-(sum(data$tp1)/sum(data$fn1))
r2<-(sum(data$tp2)/sum(data$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
# Nonparametric Bootstrap Confidence Intervals -  the basic bootstrap interval
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue.csv")
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_COmpare.csv")
obs<-159
trp1<-62
fap1<-11
fan1<-86
trp2<-62
fap2<-0
fan2<-97
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(fscore1-fscore2)}
b<-boot(data,computeFscorediff,10000)
print(b)
# Scores
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
r1<-(sum(data$tp1)/sum(data$fn1))
r2<-(sum(data$tp2)/sum(data$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
# Nonparametric Bootstrap Confidence Intervals -  the basic bootstrap interval
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
print(p1,p2,r1,r2,fscore1,fscore2)
print(p1)
print(p1,p2,r1,r2,fscore1,fscore2)
print(p1)
(sum(data$tp1)/sum(data$fp1))
(sum(data$tp2)/sum(data$fp2))
(sum(data$tp1)/sum(data$fn1))
(sum(data$tp2)/sum(data$fn2))
(2*p1*r1/(p1+r1))
(2*p2*r2/(p2+r2))
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(p1-p2)}
b<-boot(data,computeFscorediff,10000)
print(b)
obs<-722
trp1<-596
fap1<-26
fan1<-100
trp2<-596
fap2<-0
fan2<-126
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(p1-p2)}
b<-boot(data,computeFscorediff,10000)
print(b)
library(boot)
library(simpleboot)
library(ggplot2)
pval<-numeric()
cil<-numeric()
ciu<-numeric()
x<-factor()
y<-factor()
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(p1-p2)}
b<-boot(data,computeFscorediff,10000)
print(b)
p1<-(sum(data$tp1)/sum(data$fp1))
p2<-(sum(data$tp2)/sum(data$fp2))
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_COmpare.csv")
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_COmpare.csv")
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_Compare.csv")
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(r1-r2)}
b<-boot(data,computeFscorediff,10000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_Compare.csv")
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_Compare.csv")
b<-boot(data,computeFscorediff,1000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_Compare.csv"
b<-boot(data,computeFscorediff,10)
print(b)
b<-boot(data,computeFscorediff,10)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
pval<-c(pval,p)
cil<-c(cil,conf$basic[4])
ciu<-c(ciu,conf$basic[5])
remove(b,b.under.H0)
plot<-data.frame(pval,cil,ciu)
write.csv(plot,file="3.bootstrap_pvalue_Compare.csv")
obs<-85
trp1<-84
fap1<-0
fan1<-1
trp2<-82
fap2<-0
fan2<-3
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(fscore1-fscore2)}
b<-boot(data,computeFscorediff,10000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
obs<-148
trp1<-62
fap1<-0
fan1<-86
trp2<-141
fap2<-0
fan2<-7
tp1<-c(rep(1,trp1),rep(0,(obs-trp1)))
fp1<-c(rep(1,(fap1+trp1)),rep(0,(obs-(trp1+fap1))))
fn1<-c(rep(1,(fan1+trp1)),rep(0,(obs-(trp1+fan1))))
tp2<-c(rep(1,trp2),rep(0,(obs-trp2)))
fp2<-c(rep(1,(fap2+trp2)),rep(0,(obs-(trp2+fap2))))
fn2<-c(rep(1,(fan2+trp2)),rep(0,(obs-(trp2+fan2))))
data<-data.frame(tp1,fp1,fn1,tp2,fp2,fn2)
computeFscorediff<-function(data,indices){
sample<-data[indices,]
p1<-(sum(sample$tp1)/sum(sample$fp1))
p2<-(sum(sample$tp2)/sum(sample$fp2))
r1<-(sum(sample$tp1)/sum(sample$fn1))
r2<-(sum(sample$tp2)/sum(sample$fn2))
fscore1<-(2*p1*r1/(p1+r1))
fscore2<-(2*p2*r2/(p2+r2))
(fscore1-fscore2)}
b<-boot(data,computeFscorediff,10000)
print(b)
conf<-boot.ci(boot.out=b,type=c("basic"))
print(conf)
b.under.H0 <- b$t - mean(b$t)
p<-mean(abs(b.under.H0) >= abs(b$t0))
conf$basic
print(p)
plot<-read.csv("pvalue_combined_excluded_c02.csv",header=TRUE,sep=",")
#Simple matrix image
image1<-ggplot(plot, aes(y=x, x=y, label=pval, fill=pval)) + geom_tile() + geom_text()+ labs(x="ATC Class", y="") + theme( axis.text.y = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_blank())
image1
ggsave(filename="4.Plot.png", plot=image1)
#Using the Bonferroni correction for 15 comparisons from 6 runs, the p value has to be below 0.05/15 = 0.0167
plot$significance<-cut(plot$pval,c(0,0.0167,1),include.lowest = TRUE,labels=c("significant","not significant"))
image2<-ggplot(plot, aes(y=x, x=y, fill=significance)) + theme( axis.text.y = element_blank(), axis.line.y = element_blank(), axis.ticks.y = element_blank())  +geom_tile()+scale_fill_manual(values = c("orange", "green")) + labs(x="ATC Class", y="")
image2
ggsave(filename="5.Plot_2colored.png", plot=image2)
# The below graph will look something like below - https://i.stack.imgur.com/vs5yx.png
# Here the diff i refer to represent the original difference between F measures, i think it should be in basic$ else just use the original compute Fscore function.
plot$RunXvsRunY<-rownames(plot)
plot
image4 <-ggplot(plot, aes(colour=cut(plot$pval,c(0,0.05,1),include.lowest = TRUE, label=c("Sig","Non-Sig")))) +
geom_hline(yintercept=0, lty="11", colour="grey30") +
geom_errorbar(aes(plot$y, ymin=cil, ymax=ciu), width=0.2) +
geom_point(aes(plot$y, plot$point)) + labs(colour="Significance", x="ATC Group", y="Difference in F1-measure")
image4
ggsave(filename="7.Plot.errorbar.png", plot=image4)
